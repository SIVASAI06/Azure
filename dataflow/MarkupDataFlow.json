{
	"name": "MarkupDataFlow",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "StockItemsTable",
						"type": "DatasetReference"
					},
					"name": "Productstablestream"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ProductsLTJson",
						"type": "DatasetReference"
					},
					"name": "BlobJson",
					"rejectedDataLinkedService": {
						"referenceName": "StorAproducts",
						"type": "LinkedServiceReference"
					}
				}
			],
			"transformations": [
				{
					"name": "Markupcolumn"
				}
			],
			"scriptLines": [
				"source(output(",
				"          StockItemID as integer,",
				"          StockItemName as string,",
				"          SupplierID as integer,",
				"          ColorID as integer,",
				"          UnitPackageID as integer,",
				"          OuterPackageID as integer,",
				"          Brand as string,",
				"          Size as string,",
				"          LeadTimeDays as integer,",
				"          QuantityPerOuter as integer,",
				"          IsChillerStock as boolean,",
				"          Barcode as string,",
				"          TaxRate as decimal(18,3),",
				"          UnitPrice as decimal(18,2),",
				"          RecommendedRetailPrice as decimal(18,2),",
				"          TypicalWeightPerUnit as decimal(18,3),",
				"          MarketingComments as string,",
				"          InternalComments as string,",
				"          Photo as binary,",
				"          CustomFields as string,",
				"          Tags as string,",
				"          SearchDetails as string,",
				"          LastEditedBy as integer,",
				"          ValidFrom as timestamp,",
				"          ValidTo as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> Productstablestream",
				"Productstablestream derive(Markup = ListPrice/StandardCost,",
				"     partitionBy('hash', 1)) ~> Markupcolumn",
				"Markupcolumn sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['ProductswithMarkup'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          ProductID,",
				"          Name,",
				"          ProductNumber,",
				"          Color,",
				"          StandardCost,",
				"          ListPrice,",
				"          Size,",
				"          Weight,",
				"          ProductCategoryID,",
				"          ProductModelID,",
				"          SellStartDate,",
				"          SellEndDate,",
				"          DiscontinuedDate,",
				"          ModifiedDate,",
				"          Markup",
				"     ),",
				"     partitionBy('hash', 1)) ~> BlobJson"
			]
		}
	}
}